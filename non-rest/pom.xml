<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>spring-session-test</artifactId>
        <groupId>com.github.ankurpathak.api</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <artifactId>non-rest</artifactId>
    <dependencies>
        <!-- Spring Quartz -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-quartz</artifactId>
        </dependency>
        <!-- Spring Quartz -->

        <!-- Spring Data MongoDb -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <!--\ Spring Data MongoDb -->

        <!-- Spring Data Redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <!--\ Spring Data Redis -->
        <!-- Spring Boot Data Json -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-json</artifactId>
        </dependency>
        <!-- Spring Boot Data Json -->
        <!-- Quartz MongoDb -->
        <dependency>
            <groupId>com.novemberain</groupId>
            <artifactId>quartz-mongodb</artifactId>
        </dependency>
        <!--\ Quartz MongoDb -->
        <!-- Method Preconditions Check -->
        <dependency>
            <groupId>org.valid4j</groupId>
            <artifactId>valid4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
        </dependency>
        <!-- Method Preconditions Check -->
        <!--Modules -->
        <dependency>
            <groupId>com.github.ankurpathak.api</groupId>
            <artifactId>commons</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.ankurpathak.api</groupId>
            <artifactId>domain</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.ankurpathak.api</groupId>
            <artifactId>etl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.ankurpathak.api</groupId>
            <artifactId>service</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.ankurpathak.api</groupId>
            <artifactId>domain</artifactId>
            <classifier>tests</classifier>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.ankurpathak.api</groupId>
            <artifactId>service</artifactId>
            <classifier>tests</classifier>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <!--Modules -->
        <!-- Apache Commons -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-email</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
        </dependency>
        <!--/ Apache Commons -->
        <!-- Spring Batch -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-batch</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.batch</groupId>
            <artifactId>spring-batch-mongodb</artifactId>
        </dependency>
        <!--/ Spring Batch -->
        <!-- Spring AMQP -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <!--/ Spring AMQP -->
        <!--Spring Web -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <!--/ Spring Web -->
        <!-- Maxmind Geoid2 -->
        <dependency>
            <groupId>com.maxmind.geoip2</groupId>
            <artifactId>geoip2</artifactId>
        </dependency>
        <!--/ Maxmind Geoid2 -->
        <!-- Mongo Client -->
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
        </dependency>
        <!-- Mongo Client -->
        <!-- JAX-RS Jersey Rest Client -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
        </dependency>
        <!--/ JAX-RS Jersey Rest Client -->
        <!-- Spring Boot Mail -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <!--/ Spring Boot Mail -->
        <!-- Redis Client -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
        </dependency>
        <!--/ Redis Client -->
        <!--Spring Boot Thymeleaf -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!--/ Spring Boot Thymeleaf -->
        <!--Spring Boot Thymeleaf -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <!--/ Spring Boot Thymeleaf -->
        <!-- OAuth Client -->
        <dependency>
            <groupId>com.github.scribejava</groupId>
            <artifactId>scribejava-apis</artifactId>
        </dependency>
        <!--/ OAuth Client -->
        <!-- Open CSV -->
        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
        </dependency>
        <!--/ Open CSV -->
        <!--AWS s3-->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3</artifactId>
        </dependency>
        <!--/AWS s3-->
        <!-- Spring Boot Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--/ Spring Boot Test -->
        <!-- Junit 5 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <!--/ Junit 5 -->
        <!-- Mocito Junit 5 -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <!--/ Mocito Junit 5 -->
        <!-- TestContainer -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
        <!--/ TestContainer -->
        <!-- Auth0 JWT Parser -->
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
        </dependency>
        <!--/ Auth0 JWT Parser -->
        <!-- Ankur Validation Work -->
        <dependency>
            <groupId>com.github.ankurpathak.username</groupId>
            <artifactId>username-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.ankurpathak.password</groupId>
            <artifactId>password-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.ankurpathak.primitive</groupId>
            <artifactId>primitive-validation</artifactId>
        </dependency>
        <!--/ Ankur Validation Work -->


    </dependencies>

    <repositories>
        <repository>
            <id>michaelklishin</id>
            <url>https://dl.bintray.com/michaelklishin/maven/</url>
        </repository>
    </repositories>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>${project.build.directory}/maven-shared-archive-resources</directory>
                <filtering>false</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-remote-resources-plugin</artifactId>
                <configuration>
                    <resourceBundles>
                        <resourceBundle>com.github.ankurpathak.api:resource:${project.version}</resourceBundle>
                    </resourceBundles>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>com.github.ankurpathak.api.NonRestCmdApplication</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>