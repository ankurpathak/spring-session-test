<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.ankurpathak.api</groupId>
    <artifactId>spring-session-test</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <modules>
        <module>domain</module>
        <module>commons</module>
        <module>rest</module>
        <module>etl</module>
        <module>etl-cmd</module>
        <module>resource</module>
        <module>service</module>
        <module>non-rest</module>
    </modules>
    <packaging>pom</packaging>

    <name>spring-session-test</name>
    <description>Demo project for Spring Boot</description>

    <!--Spring Data Release Train -->
    <dependencyManagement>
        <dependencies>
            <!-- Spring Data -->
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-releasetrain</artifactId>
                <version>Moore-RC2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Spring Data -->
            <!--\ Amazon Aws -->
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>${amazon-sdk.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--\ Amazon Aws -->
            <!-- Spring Boot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--\ Spring Boot -->
            <!-- Json Path -->
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${json-path.version}</version>
            </dependency>
            <!--\ Json Path -->
            <!-- Mongo Client -->
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongo-java-driver</artifactId>
                <version>${mongo-driver.version}</version>
            </dependency>
            <!--\ Mongo Client -->
            <!-- Apache Commons -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-email</artifactId>
                <version>${commons-email.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collection.version}</version>
            </dependency>
            <!-- \Apache Commons -->
            <!-- Method Preconditions Check -->
            <dependency>
                <groupId>org.valid4j</groupId>
                <artifactId>valid4j</artifactId>
                <version>${valid4j.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.hamcrest</groupId>
                        <artifactId>hamcrest-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>${hamcrest.version}</version>
            </dependency>
            <!-- \Method Preconditions Check -->
            <!-- Ankur Validation Work -->
            <dependency>
                <groupId>com.github.ankurpathak.username</groupId>
                <artifactId>username-validation</artifactId>
                <version>${username-validation.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ankurpathak.password</groupId>
                <artifactId>password-validation</artifactId>
                <version>${password-validaton.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ankurpathak.primitive</groupId>
                <artifactId>primitive-validation</artifactId>
                <version>${primitive-validation.version}</version>
            </dependency>
            <!--\ Ankur Validation Work -->
            <!-- Password validation -->
            <dependency>
                <groupId>org.passay</groupId>
                <artifactId>passay</artifactId>
                <version>${passwy.version}</version>
            </dependency>
            <!--\ Password validation -->
            <!-- Redis Reactive Client -->
            <dependency>
                <groupId>io.lettuce</groupId>
                <artifactId>lettuce-core</artifactId>
                <version>${lettuce.version}</version>
            </dependency>
            <!--\ Redis Reactive Client -->
            <!-- Lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <!--\ Lombok -->
            <!-- Spring Security Test -->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-test</artifactId>
                <version>${spring-security.version}</version>
            </dependency>
            <!--\ Spring Security Test -->
            <!-- Javax EL for Bean Validation -->
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.el</artifactId>
                <version>${el.version}</version>
            </dependency>
            <!--\ Javax EL for Bean Validation -->
            <!-- OAuth Client -->
            <dependency>
                <groupId>com.github.scribejava</groupId>
                <artifactId>scribejava-apis</artifactId>
                <version>${scribe-java.version}</version>
            </dependency>
            <!--\ OAuth Client -->
            <!-- Auth0 JWT Parser -->
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${auth0.jwt.version}</version>
            </dependency>
            <!--\ Auth0 JWT Parser -->
            <!-- Google Guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <!--\ Google Guava -->
            <!-- Servlet API -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet-api.version}</version>
            </dependency>
            <!--\ Servlet API -->
            <!-- RSQL Parser -->
            <dependency>
                <groupId>com.github.rutledgepaulv</groupId>
                <artifactId>rest-query-engine</artifactId>
                <version>${rsql-query-engine.version}</version>
            </dependency>
            <!--\ RSQL Parser -->
            <!-- JAX-RS Jersey Rest Client -->
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-client</artifactId>
                <version>${jersey-client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-json-jackson</artifactId>
                <version>${jersey-client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.inject</groupId>
                <artifactId>jersey-hk2</artifactId>
                <version>${jersey-client.version}</version>
            </dependency>
            <!--\ JAX-RS Jersey Rest Client -->
            <!-- Maxmind Geoid2 -->
            <dependency>
                <groupId>com.maxmind.geoip2</groupId>
                <artifactId>geoip2</artifactId>
                <version>${geoip2.version}</version>
            </dependency>
            <!--\ Maxmind Geoid2 -->
            <!--Flipkart Jsonpatch -->
            <dependency>
                <groupId>com.flipkart.zjsonpatch</groupId>
                <artifactId>zjsonpatch</artifactId>
                <version>${flipkart.zjsonpatch}</version>
            </dependency>
            <!--\Flipkart Jsonpatch -->
            <!--Javax JSON -->
            <dependency>
                <groupId>javax.json</groupId>
                <artifactId>javax.json-api</artifactId>
                <version>${javax.json}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.json</artifactId>
                <version>${javax.json}</version>
            </dependency>
            <!--\Javax JSON -->
            <!--Gson -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.8.5</version>
            </dependency>
            <!--\Gson -->
            <!-- Junit 5 -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.engine.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.vintage</groupId>
                <artifactId>junit-vintage-engine</artifactId>
                <version>${junit.engine.version}</version>
                <scope>test</scope>
            </dependency>
            <!--\ Junit 5 -->
            <!-- Mocito Junit 5 -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <!--\ Mocito Junit 5 -->
            <!-- Reflections -->
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>${reflections.version}</version>
            </dependency>
            <!--\ Reflections -->
            <!-- TestContainer -->
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${testcontainer.version}</version>
            </dependency>
            <!--\ TestContainer -->
            <!--Modules -->
            <dependency>
                <groupId>com.github.ankurpathak.api</groupId>
                <artifactId>rest</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ankurpathak.api</groupId>
                <artifactId>commons</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ankurpathak.api</groupId>
                <artifactId>domain</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ankurpathak.api</groupId>
                <artifactId>etl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ankurpathak.api</groupId>
                <artifactId>resource</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ankurpathak.api</groupId>
                <artifactId>etl-cmd</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ankurpathak.api</groupId>
                <artifactId>service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ankurpathak.api</groupId>
                <artifactId>domain</artifactId>
                <version>${project.version}</version>
                <classifier>tests</classifier>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.github.ankurpathak.api</groupId>
                <artifactId>service</artifactId>
                <version>${project.version}</version>
                <classifier>tests</classifier>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <!--\Modules -->
            <!--Open CSV -->
            <dependency>
                <groupId>com.opencsv</groupId>
                <artifactId>opencsv</artifactId>
                <version>${opencsv.version}</version>
            </dependency>
            <!--\Open CSV -->
            <!--Jackson Annotations -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!--\Jackson Annotations -->
            <!--Greenmail -->
            <dependency>
                <groupId>com.icegreen</groupId>
                <artifactId>greenmail</artifactId>
                <version>${greenmail.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.icegreen</groupId>
                <artifactId>greenmail-spring</artifactId>
                <version>${greenmail.version}</version>
                <scope>test</scope>
            </dependency>
            <!--\ Greenmail -->
            <!--Awaitility -->
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>3.1.6</version>
                <scope>test</scope>
            </dependency>
            <!--\Awaitility -->
            <!--Concurrent Unit -->
            <dependency>
                <groupId>net.jodah</groupId>
                <artifactId>concurrentunit</artifactId>
                <version>${concurrentunit.version}</version>
                <scope>test</scope>
            </dependency>
            <!--Concurrent Unit -->
            <!-- JSoup -->
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>
            <!--\ JSoup -->
            <!-- Redis Client -->
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>
            <!--\ Redis Client -->
            <!-- Jackson CSV -->
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-csv</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!--\ Jackson CSV -->
            <!-- Spring Batch MongoDB -->
            <dependency>
                <groupId>org.springframework.batch</groupId>
                <artifactId>spring-batch-mongodb</artifactId>
                <version>${spring-batch-mongodb.version}</version>
            </dependency>
            <!--\ Spring Batch -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-batch</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-jdbc</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--\ Spring Batch -->
            <!--\ Spring Batch MongoDB -->
            <!-- Quartz MongoDb -->
            <dependency>
                <groupId>com.novemberain</groupId>
                <artifactId>quartz-mongodb</artifactId>
                <version>${quartz-mongodb.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.mongodb</groupId>
                        <artifactId>mongodb-driver</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--\ Quartz MongoDb -->
            <!-- Spring Data MongoDb -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-mongodb</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.mongodb</groupId>
                        <artifactId>mongodb-driver</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--\ Spring Data MongoDb -->
            <!--\ Spring Data MongoDb -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.lettuce</groupId>
                        <artifactId>lettuce-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--\ Spring Data MongoDb -->
            <!-- Spring Boot Test -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.hamcrest</groupId>
                        <artifactId>hamcrest-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.hamcrest</groupId>
                        <artifactId>hamcrest-library</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.mockito</groupId>
                        <artifactId>mockito-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--\ Spring Boot Test -->
        </dependencies>
    </dependencyManagement>
    <!--Spring Data Release Train -->

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>12</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <spring-boot.version>2.1.6.RELEASE</spring-boot.version>
        <concurrentunit.version>0.4.4</concurrentunit.version>
        <jsoup.version>1.14.2</jsoup.version>
        <el.version>3.0.1-b08</el.version>
        <spring-data-releasetrain.version>Moore-RC1</spring-data-releasetrain.version>
        <hamcrest.version>2.1</hamcrest.version>
        <auth0.jwt.version>3.4.0</auth0.jwt.version>
        <username-validation.version>1.2.1</username-validation.version>
        <password-validaton.version>1.0.3</password-validaton.version>
        <primitive-validation.version>1.0.2</primitive-validation.version>
        <json-path.version>2.3.0</json-path.version>
        <commons-lang.version>3.8</commons-lang.version>
        <commons-io.version>2.6</commons-io.version>
        <commons-email.version>1.5</commons-email.version>
        <valid4j.version>0.5.0</valid4j.version>
        <passwy.version>1.3.1</passwy.version>
        <lettuce.version>5.1.7.RELEASE</lettuce.version>
        <lombok.version>1.18.0</lombok.version>
        <scribe-java.version>5.6.0</scribe-java.version>
        <guava.version>26.0-jre</guava.version>
        <servlet-api.version>4.0.1</servlet-api.version>
        <jersey-client.version>2.27</jersey-client.version>
        <rsql-query-engine.version>0.7.1</rsql-query-engine.version>
        <geoip2.version>2.12.0</geoip2.version>
        <flipkart.zjsonpatch>0.4.5</flipkart.zjsonpatch>
        <javax.json>1.1</javax.json>
        <jedis.version>3.1.0</jedis.version>
        <spring-security.version>5.1.5.RELEASE</spring-security.version>
        <junit.engine.version>5.1.0</junit.engine.version>
        <junit.platform.version>1.1.0</junit.platform.version>
        <mockito.version>2.23.0</mockito.version>
        <maven.surefire.plugin.version>2.22.1</maven.surefire.plugin.version>
        <mongo-driver.version>3.11.0</mongo-driver.version>
        <testcontainer.version>1.11.3</testcontainer.version>
        <reflections.version>0.9.11</reflections.version>
        <greenmail.version>1.5.10</greenmail.version>
        <opencsv.version>4.6</opencsv.version>
        <commons-collection.version>4.4</commons-collection.version>
        <maven.remote.resource.plugin>1.6.0</maven.remote.resource.plugin>
        <amazon-sdk.version>2.7.17</amazon-sdk.version>
        <spring-batch-mongodb.version>1.1-SNAPSHOT</spring-batch-mongodb.version>
        <maven-jar-plugin.version>3.1.2</maven-jar-plugin.version>
        <quartz-mongodb.version>2.1.0</quartz-mongodb.version>
        <jackson.version>2.9.8</jackson.version>
    </properties>

    <repositories>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-remote-resources-plugin</artifactId>
                    <version>${maven.remote.resource.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin.version}</version>
                </plugin>
            </plugins>

        </pluginManagement>
    </build>


</project>
